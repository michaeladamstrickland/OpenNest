{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stric\\\\Projects\\\\OpenNest1.0\\\\OpenNest\\\\real-estate\\\\client\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { IconButton, Drawer, TextField, Box, Typography } from '@mui/material';\nimport { Send, Chat } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  // const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [message, setMessage] = useState('');\n  const handleSendMessage = async () => {\n    if (!message) return;\n    setChatHistory(prev => [...prev, {\n      user: 'You',\n      message\n    }]);\n    try {\n      const response = await fetch('http://localhost:5000/api/chatbot-response', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: message\n        })\n      });\n      const data = await response.json();\n      const botMessage = data.response;\n      setChatHistory(prev => [...prev, {\n        user: 'Bot',\n        message: botMessage\n      }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message to chatbot:', error);\n      setChatHistory(prev => [...prev, {\n        user: 'Bot',\n        message: 'Error: Unable to connect to chatbot'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => setIsOpen(true),\n      color: \"primary\",\n      sx: {\n        position: 'fixed',\n        bottom: 16,\n        right: 16,\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: isOpen,\n      onClose: () => setIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '300px',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            backgroundColor: '#1976d2',\n            color: '#fff',\n            padding: '16px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Chat with OpenNest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"How can I assist you today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1,\n            padding: '16px',\n            overflowY: 'auto',\n            backgroundColor: '#f5f5f5'\n          },\n          children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: chat.user === 'You' ? '#e0e0e0' : '#1976d2',\n              color: chat.user === 'You' ? '#000' : '#fff',\n              padding: '8px 12px',\n              borderRadius: '12px',\n              marginY: '4px',\n              maxWidth: '80%',\n              alignSelf: chat.user === 'You' ? 'flex-end' : 'flex-start'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: [chat.user, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: '16px',\n            display: 'flex',\n            gap: 1,\n            backgroundColor: '#fff'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            variant: \"outlined\",\n            fullWidth: true,\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleSendMessage,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"5eUMi5MXX1219GXw6354ETB8aJ8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","IconButton","Drawer","TextField","Box","Typography","Send","Chat","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","chatHistory","setChatHistory","message","setMessage","handleSendMessage","prev","user","response","fetch","method","headers","body","JSON","stringify","prompt","data","json","botMessage","error","console","children","onClick","color","sx","position","bottom","right","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","anchor","open","onClose","width","display","flexDirection","height","backgroundColor","padding","textAlign","variant","flex","overflowY","map","chat","index","borderRadius","marginY","maxWidth","alignSelf","fontWeight","gap","value","onChange","e","target","placeholder","fullWidth","flexGrow","_c","$RefreshReg$"],"sources":["C:/Users/stric/Projects/OpenNest1.0/OpenNest/real-estate/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { IconButton, Drawer, TextField, Box, Typography } from '@mui/material';\r\nimport { Send, Chat } from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // const [message, setMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!message) return;\r\n  \r\n    setChatHistory((prev) => [...prev, { user: 'You', message }]);\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/chatbot-response', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ prompt: message }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      const botMessage = data.response;\r\n  \r\n      setChatHistory((prev) => [...prev, { user: 'Bot', message: botMessage }]);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message to chatbot:', error);\r\n      setChatHistory((prev) => [...prev, { user: 'Bot', message: 'Error: Unable to connect to chatbot' }]);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => setIsOpen(true)}\r\n        color=\"primary\"\r\n        sx={{ position: 'fixed', bottom: 16, right: 16, zIndex: 1000 }}\r\n      >\r\n        <Chat />\r\n      </IconButton>\r\n      <Drawer anchor=\"right\" open={isOpen} onClose={() => setIsOpen(false)}>\r\n        <Box sx={{ width: '300px', display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n          {/* Chat Header */}\r\n          <Box sx={{ backgroundColor: '#1976d2', color: '#fff', padding: '16px', textAlign: 'center' }}>\r\n            <Typography variant=\"h6\">Chat with OpenNest</Typography>\r\n            <Typography variant=\"body2\">How can I assist you today?</Typography>\r\n          </Box>\r\n\r\n          {/* Chat History */}\r\n          <Box sx={{ flex: 1, padding: '16px', overflowY: 'auto', backgroundColor: '#f5f5f5' }}>\r\n            {chatHistory.map((chat, index) => (\r\n              <Box\r\n                key={index}\r\n                sx={{\r\n                  backgroundColor: chat.user === 'You' ? '#e0e0e0' : '#1976d2',\r\n                  color: chat.user === 'You' ? '#000' : '#fff',\r\n                  padding: '8px 12px',\r\n                  borderRadius: '12px',\r\n                  marginY: '4px',\r\n                  maxWidth: '80%',\r\n                  alignSelf: chat.user === 'You' ? 'flex-end' : 'flex-start',\r\n                }}\r\n              >\r\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>{chat.user}:</Typography>\r\n                <Typography variant=\"body2\">{chat.message}</Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n\r\n          {/* Input Area */}\r\n          <Box sx={{ padding: '16px', display: 'flex', gap: 1, backgroundColor: '#fff' }}>\r\n            <TextField\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder=\"Type your message...\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              sx={{ flexGrow: 1 }}\r\n            />\r\n            <IconButton onClick={handleSendMessage} color=\"primary\">\r\n              <Send />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC9E,SAASC,IAAI,EAAEC,IAAI,QAAQ,qBAAqB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMqB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACF,OAAO,EAAE;IAEdD,cAAc,CAAEI,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEJ;IAAQ,CAAC,CAAC,CAAC;IAE7D,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEZ;QAAQ,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAGF,IAAI,CAACR,QAAQ;MAEhCN,cAAc,CAAEI,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEJ,OAAO,EAAEe;MAAW,CAAC,CAAC,CAAC;MACzEd,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDjB,cAAc,CAAEI,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEJ,OAAO,EAAE;MAAsC,CAAC,CAAC,CAAC;IACtG;EACF,CAAC;EAGD,oBACET,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA,CAACT,UAAU;MACTqC,OAAO,EAAEA,CAAA,KAAMtB,SAAS,CAAC,IAAI,CAAE;MAC/BuB,KAAK,EAAC,SAAS;MACfC,EAAE,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAP,QAAA,eAE/D3B,OAAA,CAACH,IAAI;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACbtC,OAAA,CAACR,MAAM;MAAC+C,MAAM,EAAC,OAAO;MAACC,IAAI,EAAEnC,MAAO;MAACoC,OAAO,EAAEA,CAAA,KAAMnC,SAAS,CAAC,KAAK,CAAE;MAAAqB,QAAA,eACnE3B,OAAA,CAACN,GAAG;QAACoC,EAAE,EAAE;UAAEY,KAAK,EAAE,OAAO;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAlB,QAAA,gBAEpF3B,OAAA,CAACN,GAAG;UAACoC,EAAE,EAAE;YAAEgB,eAAe,EAAE,SAAS;YAAEjB,KAAK,EAAE,MAAM;YAAEkB,OAAO,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAArB,QAAA,gBAC3F3B,OAAA,CAACL,UAAU;YAACsD,OAAO,EAAC,IAAI;YAAAtB,QAAA,EAAC;UAAkB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxDtC,OAAA,CAACL,UAAU;YAACsD,OAAO,EAAC,OAAO;YAAAtB,QAAA,EAAC;UAA2B;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eAGNtC,OAAA,CAACN,GAAG;UAACoC,EAAE,EAAE;YAAEoB,IAAI,EAAE,CAAC;YAAEH,OAAO,EAAE,MAAM;YAAEI,SAAS,EAAE,MAAM;YAAEL,eAAe,EAAE;UAAU,CAAE;UAAAnB,QAAA,EAClFpB,WAAW,CAAC6C,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BtD,OAAA,CAACN,GAAG;YAEFoC,EAAE,EAAE;cACFgB,eAAe,EAAEO,IAAI,CAACxC,IAAI,KAAK,KAAK,GAAG,SAAS,GAAG,SAAS;cAC5DgB,KAAK,EAAEwB,IAAI,CAACxC,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG,MAAM;cAC5CkC,OAAO,EAAE,UAAU;cACnBQ,YAAY,EAAE,MAAM;cACpBC,OAAO,EAAE,KAAK;cACdC,QAAQ,EAAE,KAAK;cACfC,SAAS,EAAEL,IAAI,CAACxC,IAAI,KAAK,KAAK,GAAG,UAAU,GAAG;YAChD,CAAE;YAAAc,QAAA,gBAEF3B,OAAA,CAACL,UAAU;cAACsD,OAAO,EAAC,OAAO;cAACnB,EAAE,EAAE;gBAAE6B,UAAU,EAAE;cAAO,CAAE;cAAAhC,QAAA,GAAE0B,IAAI,CAACxC,IAAI,EAAC,GAAC;YAAA;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACjFtC,OAAA,CAACL,UAAU;cAACsD,OAAO,EAAC,OAAO;cAAAtB,QAAA,EAAE0B,IAAI,CAAC5C;YAAO;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC;UAAA,GAZlDgB,KAAK;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaP,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNtC,OAAA,CAACN,GAAG;UAACoC,EAAE,EAAE;YAAEiB,OAAO,EAAE,MAAM;YAAEJ,OAAO,EAAE,MAAM;YAAEiB,GAAG,EAAE,CAAC;YAAEd,eAAe,EAAE;UAAO,CAAE;UAAAnB,QAAA,gBAC7E3B,OAAA,CAACP,SAAS;YACRoE,KAAK,EAAEpD,OAAQ;YACfqD,QAAQ,EAAGC,CAAC,IAAKrD,UAAU,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC5CI,WAAW,EAAC,sBAAsB;YAClChB,OAAO,EAAC,UAAU;YAClBiB,SAAS;YACTpC,EAAE,EAAE;cAAEqC,QAAQ,EAAE;YAAE;UAAE;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACFtC,OAAA,CAACT,UAAU;YAACqC,OAAO,EAAEjB,iBAAkB;YAACkB,KAAK,EAAC,SAAS;YAAAF,QAAA,eACrD3B,OAAA,CAACJ,IAAI;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAAClC,EAAA,CAxFID,OAAO;AAAAiE,EAAA,GAAPjE,OAAO;AA0Fb,eAAeA,OAAO;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}