{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stric\\\\Projects\\\\OpenNest1.0\\\\OpenNest\\\\real-estate\\\\client\\\\src\\\\context\\\\PropertyContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport mockProperties from '../data/mock_properties.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyContext = /*#__PURE__*/createContext();\nexport const PropertyProvider = ({\n  children\n}) => {\n  _s();\n  const [properties, setProperties] = useState(mockProperties);\n  const [sortedProperties, setSortedProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const filterProperties = filters => {\n    let filteredProperties = [...properties];\n    if (filters.bedrooms) {\n      filteredProperties = filteredProperties.filter(property => property.beds >= filters.bedrooms);\n    }\n    if (filters.bathrooms) {\n      filteredProperties = filteredProperties.filter(property => property.baths >= filters.bathrooms);\n    }\n    if (filters.minPrice && filters.maxPrice) {\n      filteredProperties = filteredProperties.filter(property => property.price >= filters.minPrice && property.price <= filters.maxPrice);\n    }\n    if (filters.city) {\n      filteredProperties = filteredProperties.filter(property => property.city.toLowerCase().includes(filters.city.toLowerCase()));\n    }\n    setSortedProperties(filteredProperties);\n  };\n  useEffect(() => {\n    setSortedProperties(mockProperties); // Initial setup\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PropertyContext.Provider, {\n    value: {\n      properties,\n      sortedProperties,\n      loading,\n      filterProperties\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyProvider, \"2gOqbsWp1mVvVjxgC6gQ2SGfBsk=\");\n_c = PropertyProvider;\nexport const usePropertyContext = () => {\n  _s2();\n  return React.useContext(PropertyContext);\n};\n_s2(usePropertyContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default PropertyContext;\nvar _c;\n$RefreshReg$(_c, \"PropertyProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","mockProperties","jsxDEV","_jsxDEV","PropertyContext","PropertyProvider","children","_s","properties","setProperties","sortedProperties","setSortedProperties","loading","setLoading","filterProperties","filters","filteredProperties","bedrooms","filter","property","beds","bathrooms","baths","minPrice","maxPrice","price","city","toLowerCase","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePropertyContext","_s2","useContext","$RefreshReg$"],"sources":["C:/Users/stric/Projects/OpenNest1.0/OpenNest/real-estate/client/src/context/PropertyContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport mockProperties from '../data/mock_properties.json';\r\n\r\nconst PropertyContext = createContext();\r\n\r\nexport const PropertyProvider = ({ children }) => {\r\n  const [properties, setProperties] = useState(mockProperties);\r\n  const [sortedProperties, setSortedProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const filterProperties = (filters) => {\r\n    let filteredProperties = [...properties];\r\n\r\n    if (filters.bedrooms) {\r\n      filteredProperties = filteredProperties.filter((property) => property.beds >= filters.bedrooms);\r\n    }\r\n\r\n    if (filters.bathrooms) {\r\n      filteredProperties = filteredProperties.filter((property) => property.baths >= filters.bathrooms);\r\n    }\r\n\r\n    if (filters.minPrice && filters.maxPrice) {\r\n      filteredProperties = filteredProperties.filter(\r\n        (property) => property.price >= filters.minPrice && property.price <= filters.maxPrice\r\n      );\r\n    }\r\n\r\n    if (filters.city) {\r\n      filteredProperties = filteredProperties.filter((property) =>\r\n        property.city.toLowerCase().includes(filters.city.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setSortedProperties(filteredProperties);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSortedProperties(mockProperties); // Initial setup\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <PropertyContext.Provider value={{ properties, sortedProperties, loading, filterProperties }}>\r\n      {children}\r\n    </PropertyContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePropertyContext = () => React.useContext(PropertyContext);\r\n\r\nexport default PropertyContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACE,cAAc,CAAC;EAC5D,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMe,gBAAgB,GAAIC,OAAO,IAAK;IACpC,IAAIC,kBAAkB,GAAG,CAAC,GAAGR,UAAU,CAAC;IAExC,IAAIO,OAAO,CAACE,QAAQ,EAAE;MACpBD,kBAAkB,GAAGA,kBAAkB,CAACE,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,IAAIL,OAAO,CAACE,QAAQ,CAAC;IACjG;IAEA,IAAIF,OAAO,CAACM,SAAS,EAAE;MACrBL,kBAAkB,GAAGA,kBAAkB,CAACE,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACG,KAAK,IAAIP,OAAO,CAACM,SAAS,CAAC;IACnG;IAEA,IAAIN,OAAO,CAACQ,QAAQ,IAAIR,OAAO,CAACS,QAAQ,EAAE;MACxCR,kBAAkB,GAAGA,kBAAkB,CAACE,MAAM,CAC3CC,QAAQ,IAAKA,QAAQ,CAACM,KAAK,IAAIV,OAAO,CAACQ,QAAQ,IAAIJ,QAAQ,CAACM,KAAK,IAAIV,OAAO,CAACS,QAChF,CAAC;IACH;IAEA,IAAIT,OAAO,CAACW,IAAI,EAAE;MAChBV,kBAAkB,GAAGA,kBAAkB,CAACE,MAAM,CAAEC,QAAQ,IACtDA,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,OAAO,CAACW,IAAI,CAACC,WAAW,CAAC,CAAC,CACjE,CAAC;IACH;IAEAhB,mBAAmB,CAACK,kBAAkB,CAAC;EACzC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdW,mBAAmB,CAACV,cAAc,CAAC,CAAC,CAAC;IACrCY,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,eAAe,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,UAAU;MAAEE,gBAAgB;MAAEE,OAAO;MAAEE;IAAiB,CAAE;IAAAR,QAAA,EAC1FA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAC3B,EAAA,CAzCWF,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AA2C7B,OAAO,MAAM+B,kBAAkB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,KAAK,CAACyC,UAAU,CAAClC,eAAe,CAAC;AAAA;AAACiC,GAAA,CAA7DD,kBAAkB;AAE/B,eAAehC,eAAe;AAAC,IAAA+B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}